package Model.Schedules;import Model.Time.Day;import Model.Time.Week;public class Schedule {    public Day[] days = new Day[7];    public Schedule() {//        for (int i = 0; i < 7; i++) {//            days[i] = new Day(Week.DAY_NAMES[i]);//        }    }    // Method to check for shift conflicts    public String printSchedule() {        StringBuilder scheduleString = new StringBuilder();        for (Day day : days) {            scheduleString.append(day.name).append(":\n");            for(Shift shift: day.getShifts())            scheduleString.append("Shift: ")                    .append(shift.getStartTime())                    .append(" to ")                    .append(shift.getEndTime())                    .append("\n");        }        return scheduleString.toString();    }    private Day getDay(Day day) {        for(int i = 0;i< 7;i++){            day = days[i];        }        return day;    }    public Day getDay(Week.DayNames day){        for(int i = 0;i< 7;i++){            if(days[i].name.equals(day)){                return days[i];            }        }        throw new IllegalArgumentException();    }    public void setDay(Day day, int i){        days[i] = day;    }    // Additional methods as needed}