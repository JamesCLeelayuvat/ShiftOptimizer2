package Model.Schedules.WorkerSchedule;import Controller.Time.Week;public class WorkerSchedule {    public DayWorkerSchedule[] dayWorkerSchedules = new DayWorkerSchedule[7];    public WorkerSchedule() {    }    // Method to check for shift conflicts    public String buildUnavailableTimesScheduleString() {        StringBuilder scheduleString = new StringBuilder();        for (DayWorkerSchedule dayWorkerSchedule : dayWorkerSchedules) {            scheduleString.append(dayWorkerSchedule.name).append(":\n");            for(TimeUnavailable timeUnavailable: dayWorkerSchedule.getTimesUnavailable()) {                scheduleString.append("Times Unavailable: ")                        .append(timeUnavailable.getStartTime())                        .append(" to ")                        .append(timeUnavailable.getEndTime())                        .append("\n");            }        }        return scheduleString.toString();    }    public DayWorkerSchedule getDaySchedule(Week.DayNames day){        for(int i = 0;i< 7;i++){            if(dayWorkerSchedules[i].name.equals(day)){                return dayWorkerSchedules[i];            }        }        throw new IllegalArgumentException();    }    public int getTotalScheduledMinutes() {        int totalMinutes = 0;        for (DayWorkerSchedule daySchedule : dayWorkerSchedules) {            if (daySchedule != null) {                totalMinutes += daySchedule.getTotalScheduledMinutes();            }        }        return totalMinutes;    }    public void setDay(DayWorkerSchedule dayWorkerSchedule, int i){        dayWorkerSchedules[i] = dayWorkerSchedule;    }    // Additional methods as needed}